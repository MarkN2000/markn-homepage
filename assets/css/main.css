@import "tailwindcss";

@theme {
  /* カスタムカラーパレット */
  --color-primary: #0ea5e9; /* 水色系 (Tailwindのsky-500相当) */
  --color-primary-hover: #0284c7; /* 水色系ホバー時 (Tailwindのsky-600相当) */
  --color-secondary: #ec4899; /* ピンク系 (Tailwindのpink-500相当) */
  --color-accent-yellow: #facc15; /* 黄色系 (Tailwindのyellow-400相当) */
  --color-accent-orange: #f97316; /* オレンジ系 (Tailwindのorange-500相当) */
  --color-accent-white: #ffffff; /* 白 */
  --color-button-contact-bg: #1e40af;      /* くらい紺色 (Tailwind blue-800) */
  --color-button-contact-bg-hover: #1e3a8a; /* くらい紺色ホバー時 (Tailwind blue-900) */
  /* カスタムフォントファミリー */
  --font-family-sans: "Noto Sans JP", ui-sans-serif, system-ui, -apple-system,
    BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans",
    sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol",
    "Noto Color Emoji";
}

/* 基本的なbodyのスタイリング */
body {
    font-family: theme("fontFamily.sans");
    background-image: url("/images/bg.png");
    background-repeat: repeat;
    color: theme("colors.gray.800");
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

.content-wrapper {
    background-color: theme("colors.white");
}

/* 個別記事ページ用の基本的なタイポグラフィスタイル */
.prose {
  color: var(--color-gray-700, #374151);
  line-height: 1.75;
  --max-prose-width: 65ch;
}

/* H2: フル幅の薄い背景色、左アクセントボーダー、下線はテーマカラー */
.prose h2 {
  font-size: var(--font-size-2xl, 1.5rem);
  font-weight: var(--font-weight-bold, 700);
  color: var(--color-gray-900, #111827);
  margin-top: var(--spacing-10, 2.5rem);
  margin-bottom: var(--spacing-4, 1rem);
  padding: var(--spacing-3, 0.75rem) var(--spacing-4, 1rem); /* 上下左右にパディングを追加 */
  background-color: #e0f2fe; /* Tailwindのsky-100相当の薄い水色 */
  border-left: 5px solid var(--color-primary); /* 左側にテーマカラーの太いボーダー */
  border-bottom: 1px solid var(--color-primary); /* 下線は少し細くしてバランスを取る */
  border-radius: var(--border-radius-md, 0.375rem); /* 少し角を丸める */
}

/* H3: 左アクセントボーダー、薄い下線、文字色は濃いグレー、ドットは復活 */
.prose h3 {
  font-size: var(--font-size-xl, 1.25rem);
  font-weight: var(--font-weight-semibold, 600);
  color: var(--color-gray-800, #1f2937); /* 文字色を濃いグレーに戻す */
  margin-top: var(--spacing-8, 2rem);
  margin-bottom: var(--spacing-3, 0.75rem);
  padding-left: calc(var(--spacing-2, 0.5rem) + 0.8em); /* ドット分の左パディング */
  padding-bottom: var(--spacing-1, 0.25rem); /* 下線との間に少し余白 */
  border-left: 3px solid var(--color-primary-hover); /* 少し濃いテーマカラーの左ボーダー */
  border-bottom: 1px solid var(--color-gray-300, #d1d5db); /* 薄いグレーの下線 */
  position: relative; /* 疑似要素を使うための準備 */
}

.prose h3::before {
  content: '●';
  color: var(--color-primary); /* ドットの色はテーマカラー */
  font-size: 0.7em;
  position: absolute;
  left: var(--spacing-2, 0.5rem); /* 左ボーダーの内側にドットを配置するため調整 */
  top: 50%;
  transform: translateY(-50%);
  line-height: 1; /* ドットが他の行の高さに影響しないように */
}

/* H4: 現在のスタイルを維持 */
.prose h4 {
  font-size: var(--font-size-lg, 1.125rem);
  font-weight: var(--font-weight-semibold, 600);
  color: var(--color-gray-800, #1f2937);
  margin-top: var(--spacing-6, 1.5rem);
  margin-bottom: var(--spacing-2, 0.5rem);
}

.prose p,
.prose ul,
.prose ol,
.prose blockquote,
.prose pre {
  margin-bottom: var(--spacing-6, 1.5rem);
}

.prose p,
.prose ul,
.prose ol {
  overflow-wrap: break-word; /* 長い単語やURLを適切な位置で改行します */
}

.prose a {
  color: var(--color-primary);
  text-decoration: none;
  font-weight: var(--font-weight-medium, 500);
  overflow-wrap: break-word; /* 長いURLを適切な位置で改行します */
}

.prose ul,
.prose ol {
  padding-left: var(--spacing-6, 1.5rem); /* リストのインデント (1.5rem) */
}
.prose ul {
  list-style-type: disc;
}
.prose ol {
  list-style-type: decimal;
}
.prose ul ul, .prose ol ol,
.prose ul ol, .prose ol ul {
    margin-top: var(--spacing-2, 0.5rem);
    margin-bottom: var(--spacing-2, 0.5rem);
}

.prose a {
  color: var(--color-primary);
  text-decoration: none;
  font-weight: var(--font-weight-medium, 500);
}
.prose a:hover {
  text-decoration: underline;
  color: var(--color-primary-hover);
}

.prose strong {
  font-weight: var(--font-weight-bold, 700);
  color: var(--color-gray-900, #111827);
}

.prose blockquote {
  font-style: italic;
  color: var(--color-gray-600, #4b5563);
  border-left: 4px solid var(--color-gray-300, #d1d5db);
  padding-left: var(--spacing-4, 1rem);
  margin-left: 0;
  margin-right: 0;
}

.prose code { /* インラインコード */
  font-size: var(--font-size-sm, 0.875rem);
  background-color: var(--color-gray-100, #f3f4f6);
  color: var(--color-pink-600, #db2777);
  padding: var(--spacing-1, 0.25rem) var(--spacing-1-5, 0.375rem);
  border-radius: var(--border-radius-md, 0.375rem);
  font-weight: var(--font-weight-normal, 400);
}

.prose pre { /* コードブロックのコンテナ */
  background-color: var(--color-gray-800, #1f2937);
  color: var(--color-gray-100, #f3f4f6);
  padding: var(--spacing-4, 1rem);
  border-radius: var(--border-radius-md, 0.375rem);
  overflow-x: auto;
}
.prose pre code { /* コードブロック内のcodeタグ */
  background-color: transparent;
  color: inherit;
  padding: 0;
  border-radius: 0;
  font-size: var(--font-size-sm, 0.875rem);
  line-height: var(--line-height-relaxed, 1.625);
}

.prose-sky a {
  color: var(--color-primary);
}
.prose-sky a:hover {
  color: var(--color-primary-hover);
}

/* 画像関連のスタイル */
.prose img {
  display: block;
  margin-left: auto;
  margin-right: auto;
  max-width: 100%;
  height: auto;
  border-radius: var(--border-radius-md, 0.375rem);
}

.prose figure {
  margin-top: var(--spacing-8, 2rem);
  margin-bottom: var(--spacing-8, 2rem);
}

.prose figcaption {
  font-size: var(--font-size-sm, 0.875rem);
  color: var(--color-gray-600, #4b5563);
  text-align: center;
  margin-top: var(--spacing-2, 0.5rem);
}

/* --- ▼▼▼ リスト内画像のインデント解除 & 中央揃え用スタイル ▼▼▼ --- */
.prose ul > li > figure.figure-unindented-center,
.prose ol > li > figure.figure-unindented-center {
  /* li の padding-left を打ち消すためにネガティブマージンを設定 */
  margin-left: calc(var(--spacing-6, 1.5rem) * -1);
  /*
    figure の幅を、li の幅 + li の左パディング分に設定する。
    li の幅は .prose の幅から自身の padding-left を引いたものなので、
    結果的に .prose のコンテンツエリア幅と同じになることを目指す。
    ただし、.prose自体にmax-widthが設定されているので、
    単純な % 指定だと期待通りにいかない場合がある。
    img の max-width で制御する方が確実。
  */
  width: auto; /* figure自体の幅は自動とし、中のimgの幅で制御 */
}
.prose ul ul > li > figure.figure-unindented-center,
.prose ul ol > li > figure.figure-unindented-center,
.prose ol ul > li > figure.figure-unindented-center,
.prose ol ol > li > figure.figure-unindented-center {
  /* 2階層分のネガティブマージン (1.5rem * 2 = 3rem) */
  margin-left: calc(var(--spacing-6, 1.5rem) * -2);
}


.prose figure.figure-unindented-center img {
  /*
    画像の最大幅を .prose のコンテンツ幅に合わせる。
    .prose はデフォルトで max-width: 65ch が Tailwind Typography によって設定されるが、
    single.html では .prose.max-w-none が使われ、その親の article が max-w-4xl。
    なので、画像の最大幅は theme("maxWidth.4xl") に近い値か、
    それ以下の任意の値にする。
    ここでは layouts/shortcodes/figure.html でのリサイズ幅 (700px) を尊重する形とする。
  */
  max-width: 700px; /* figure.html の Resize 幅と合わせるか、それ以下に */
  width: 100%; /* 親の figure の幅に対して100% */
  display: block;
  margin-left: auto;
  margin-right: auto;
  border-radius: var(--border-radius-md, 0.375rem); /* 既存のスタイルを適用 */
  box-shadow: theme("boxShadow.md"); /* 既存のスタイルを適用 */
}

/* .prose 直下の figure (リスト外) の画像も同様の最大幅と中央揃えを基本とする */
/* ただし、figure.html 側で mx-auto が img についているので、ここでは max-width の統一が主目的 */
.prose > figure > img,
.prose > figure > a > img { /* 画像がリンクで囲まれている場合も考慮 */
  max-width: 700px; /* figure.html の Resize 幅と合わせるか、それ以下に */
  /* width: 100%; */ /* こちらは figure.html の mx-auto と競合する可能性があるので注意 */
  /* margin-left: auto; */ /* figure.html側で対応 */
  /* margin-right: auto; */ /* figure.html側で対応 */
}
/* --- ▲▲▲ リスト内画像のインデント解除 & 中央揃え用スタイル --- */


/* Line Clamp ユーティリティ */
.line-clamp-2 {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
}
.line-clamp-3 {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 3;
}

/* Pagination スタイル */
.pagination {
  @apply flex justify-center my-8;
}
.page-item .page-link {
  @apply inline-block px-4 py-2 mx-1;
  @apply border border-gray-300 rounded-md;
  @apply bg-white text-gray-700;
  @apply transition-colors duration-150 ease-in-out;
}
.page-item:not(.disabled) .page-link:hover {
  @apply bg-sky-100 text-primary border-primary;
}
.page-item.active .page-link {
  @apply bg-primary text-white border-primary;
  @apply font-semibold;
  @apply cursor-default;
}
.page-item.disabled .page-link {
  @apply bg-gray-100 text-gray-400 border-gray-200;
  @apply cursor-not-allowed;
}
.page-item .page-link[aria-label="Previous"],
.page-item .page-link[aria-label="Next"],
.page-item .page-link[aria-label="First"],
.page-item .page-link[aria-label="Last"] {
  /* スタイル */
}

main > article > header > h1 {
  font-size: theme("fontSize.3xl"); /* Tailwindのtext-3xl相当 */
  font-weight: theme("fontWeight.bold");
  color: var(--color-gray-900, #111827);
  
  margin-bottom: var(--spacing-4, 1rem); /* H2のmargin-bottomと合わせるか、元のmb-3相当の var(--spacing-3) にする */
  padding: var(--spacing-3, 0.75rem) var(--spacing-4, 1rem); /* 上下左右にパディングを追加 */
  background-color: #e0f2fe; /* H2と同じ薄い水色 (Tailwindのsky-100相当) */
  border-left: 5px solid var(--color-primary); /* 左側にテーマカラーの太いボーダー */
  border-bottom: 1px solid var(--color-primary); /* H2と同様の下線 */
  border-radius: var(--border-radius-md, 0.375rem); /* 少し角を丸める */
}

/* レスポンシブ対応 (中画面以上) */
@media (min-width: theme("screens.md")) {
  main > article > header > h1 {
    font-size: theme("fontSize.4xl"); /* Tailwindのmd:text-4xl相当 */
  }
}

.site-header {
  background-image: url('/images/header-mobile.webp'); /* スマートフォン用の画像をデフォルトに */
}

@media (min-width: theme('screens.md')) { /* mdブレークポイント以上 (Tailwindのデフォルトは768px) */
  .site-header {
    background-image: url('/images/header.webp'); /* PC用の画像に切り替え */
  }
}